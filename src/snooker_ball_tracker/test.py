# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'snooker-ball-tracker.ui'
#
# Created by: PyQt5 UI code generator 5.14.1
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.central_widget_layout.addWidget(self.settings_groupbox, 0, 0, 1, 1)
        self.central_widget_layout.addWidget(self.videoPlayer_groupbox, 0, 1, 2, 1)
        self.central_widget_layout.addWidget(self.logging_groupbox, 1, 0, 1, 1)
        self.central_widget_layout.setColumnStretch(0, 3)
        self.central_widget_layout.setColumnStretch(1, 5)

        MainWindow.setCentralWidget(self.central_widget)
        
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1269, 22))
        self.menubar.setObjectName("menubar")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuExit = QtWidgets.QMenu(self.menubar)
        self.menuExit.setObjectName("menuExit")
        self.menuExit_2 = QtWidgets.QMenu(self.menubar)
        self.menuExit_2.setObjectName("menuExit_2")
        MainWindow.setMenuBar(self.menubar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setEnabled(True)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.actionLoad = QtWidgets.QAction(MainWindow)
        self.actionLoad.setObjectName("actionLoad")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSelect_Video_File = QtWidgets.QAction(MainWindow)
        self.actionSelect_Video_File.setObjectName("actionSelect_Video_File")
        self.menuSettings.addAction(self.actionLoad)
        self.menuSettings.addAction(self.actionSave)
        self.menuExit.addAction(self.actionSelect_Video_File)
        self.menubar.addAction(self.menuExit.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())
        self.menubar.addAction(self.menuExit_2.menuAction())

        self.retranslateUi(MainWindow)
        self.settings_tabs.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.settings_groupbox.setTitle(_translate("MainWindow", "Settings"))
        self.detectColour_label.setText(_translate("MainWindow", "Detect Colour"))
        self.showMask_label.setText(_translate("MainWindow", "Show Mask"))
        self.showMask_yradio.setText(_translate("MainWindow", "Yes"))
        self.showMask_nradio.setText(_translate("MainWindow", "No"))
        self.reset_btn.setText(_translate("MainWindow", "Reset"))
        self.lRange_label.setText(_translate("MainWindow", "Lower Range"))
        self.uRange_label.setText(_translate("MainWindow", "Upper Range"))
        self.hue_label.setText(_translate("MainWindow", "Hue"))
        self.lHue_label.setText(_translate("MainWindow", "0"))
        self.uHue_label.setText(_translate("MainWindow", "0"))
        self.sat_label.setText(_translate("MainWindow", "Saturation"))
        self.lSat_label.setText(_translate("MainWindow", "0"))
        self.uSat_label.setText(_translate("MainWindow", "0"))
        self.val_label.setText(_translate("MainWindow", "Value"))
        self.lVal_label.setText(_translate("MainWindow", "0"))
        self.uVal_label.setText(_translate("MainWindow", "0"))
        self.settings_tabs.setTabText(self.settings_tabs.indexOf(self.colourDetection_tab), _translate("MainWindow", "Colour Detection"))
        self.convexity_groupbox.setTitle(_translate("MainWindow", "Convexity"))
        self.convexity_filterBy_label.setText(_translate("MainWindow", "Filter By"))
        self.convexity_filterBy_yradio.setText(_translate("MainWindow", "Yes"))
        self.convexity_filterBy_nradio.setText(_translate("MainWindow", "No"))
        self.convexity_minVal_label.setText(_translate("MainWindow", "Minimum Value"))
        self.convexity_minVal.setText(_translate("MainWindow", "0"))
        self.convexity_maxVal_label.setText(_translate("MainWindow", "Maximum Value"))
        self.convexity_maxVal.setText(_translate("MainWindow", "0"))
        self.convexity_reset_btn.setText(_translate("MainWindow", "Reset"))
        self.inertia_groupbox.setTitle(_translate("MainWindow", "Inertia"))
        self.inertia_filterBy_label.setText(_translate("MainWindow", "Filter By"))
        self.inertia_filterBy_yradio.setText(_translate("MainWindow", "Yes"))
        self.inertia_filterBy_nradio.setText(_translate("MainWindow", "No"))
        self.inertia_minVal_label.setText(_translate("MainWindow", "Minimum Value"))
        self.inertia_minVal.setText(_translate("MainWindow", "0"))
        self.inertia_maxVal_label.setText(_translate("MainWindow", "Maximum Value"))
        self.inertia_maxVal.setText(_translate("MainWindow", "0"))
        self.inertia_reset_btn.setText(_translate("MainWindow", "Reset"))
        self.circularity_groupbox.setTitle(_translate("MainWindow", "Circularity"))
        self.circular_filterBy_label.setText(_translate("MainWindow", "Filter By"))
        self.circular_filterBy_yradio.setText(_translate("MainWindow", "Yes"))
        self.circular_filterBy_nradio.setText(_translate("MainWindow", "No"))
        self.circular_minVal_label.setText(_translate("MainWindow", "Minimum Value"))
        self.circular_minVal.setText(_translate("MainWindow", "0"))
        self.circular_maxVal_label.setText(_translate("MainWindow", "Maximum Value"))
        self.circular_maxVal.setText(_translate("MainWindow", "0"))
        self.circular_reset_btn.setText(_translate("MainWindow", "Reset"))
        self.area_groupbox.setTitle(_translate("MainWindow", "Area"))
        self.area_filterBy_label.setText(_translate("MainWindow", "Filter By"))
        self.area_filterBy_yradio.setText(_translate("MainWindow", "Yes"))
        self.area_filterBy_nradio.setText(_translate("MainWindow", "No"))
        self.area_minVal_label.setText(_translate("MainWindow", "Minimum Value"))
        self.area_minVal.setText(_translate("MainWindow", "0"))
        self.area_maxVal_label.setText(_translate("MainWindow", "Maximum Value"))
        self.area_maxVal.setText(_translate("MainWindow", "0"))
        self.area_reset_btn.setText(_translate("MainWindow", "Reset"))
        self.settings_tabs.setTabText(self.settings_tabs.indexOf(self.ballDetection_tab), _translate("MainWindow", "Ball Detection"))
        self.videoPlayer_groupbox.setTitle(_translate("MainWindow", "Video Player"))
        self.play_btn.setText(_translate("MainWindow", "Play"))
        self.restart_btn.setText(_translate("MainWindow", "Restart"))
        self.cropFrames_label.setText(_translate("MainWindow", "Crop Frames"))
        self.detectTable_btn.setText(_translate("MainWindow", "Detect Table"))
        self.showThreshold_yradio.setText(_translate("MainWindow", "Yes"))
        self.showThreshold_label.setText(_translate("MainWindow", "Show Threshold"))
        self.showThreshold_nradio.setText(_translate("MainWindow", "No"))
        self.cropFrames_yradio.setText(_translate("MainWindow", "Yes"))
        self.cropFrames_nradio.setText(_translate("MainWindow", "No"))
        self.selectVideoFile_btn.setText(_translate("MainWindow", "Select Video File"))
        self.logging_groupbox.setTitle(_translate("MainWindow", "Logging"))
        self.ballsPotted_label.setText(_translate("MainWindow", "Balls Potted"))
        self.lastShot_brownsCount.setText(_translate("MainWindow", "0"))
        self.whites_label.setText(_translate("MainWindow", "Whites"))
        self.lastShotCount_label.setText(_translate("MainWindow", "Last Shot Ball Count"))
        self.curBallCount_brownsCount.setText(_translate("MainWindow", "0"))
        self.lastShot_bluesCount.setText(_translate("MainWindow", "0"))
        self.reds_label.setText(_translate("MainWindow", "Reds"))
        self.yellows_labels.setText(_translate("MainWindow", "Yellows"))
        self.lastShot_blacksCount.setText(_translate("MainWindow", "0"))
        self.blacks_label.setText(_translate("MainWindow", "Blacks"))
        self.curBallCount_yellowsCount.setText(_translate("MainWindow", "0"))
        self.lastShot_redsCount.setText(_translate("MainWindow", "0"))
        self.pinks_label.setText(_translate("MainWindow", "Pinks"))
        self.curBallCount_bluesCount.setText(_translate("MainWindow", "0"))
        self.curBallCount_greensCount.setText(_translate("MainWindow", "0"))
        self.lastShot_pinksCount.setText(_translate("MainWindow", "0"))
        self.curBallCount_redsCount.setText(_translate("MainWindow", "0"))
        self.lastShot_whitesCount.setText(_translate("MainWindow", "0"))
        self.curBallCount_whitesCount.setText(_translate("MainWindow", "0"))
        self.curBallCount_label.setText(_translate("MainWindow", "Current Ball Count"))
        self.blues_label.setText(_translate("MainWindow", "Blues"))
        self.lastShot_yellowsCount.setText(_translate("MainWindow", "0"))
        self.curBallCount_pinksCount.setText(_translate("MainWindow", "0"))
        self.whiteStatus_label.setText(_translate("MainWindow", "White Ball Status"))
        self.browns_label.setText(_translate("MainWindow", "Browns"))
        self.greens_label.setText(_translate("MainWindow", "Greens"))
        self.curBallCount_blacksCount.setText(_translate("MainWindow", "0"))
        self.whiteStatus.setText(_translate("MainWindow", "stopped..."))
        self.lastShot_greensCount.setText(_translate("MainWindow", "0"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.menuExit.setTitle(_translate("MainWindow", "File"))
        self.menuExit_2.setTitle(_translate("MainWindow", "Exit"))
        self.actionLoad.setText(_translate("MainWindow", "Load"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSelect_Video_File.setText(_translate("MainWindow", "Select Video File"))
